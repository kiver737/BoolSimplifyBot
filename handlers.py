from telebot import types
from logic import simplify_kmap
from config import TOKEN
import telebot

bot = telebot.TeleBot(TOKEN)
user_data = {}

def request_values(chat_id, value_index=1):
    question = f"–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ {value_index} (A, B = 0 –∏–ª–∏ 1):"
    msg = bot.send_message(chat_id, question)
    bot.register_next_step_handler(msg, process_value_input, value_index)

def process_value_input(message, value_index):
    chat_id = message.chat.id
    value = message.text.strip()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥
    if value not in ['0', '1']:
        msg = bot.reply_to(message, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 0 –∏–ª–∏ 1.")
        bot.register_next_step_handler(msg, process_value_input, value_index)
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –≤–≤–æ–¥
    if chat_id not in user_data:
        user_data[chat_id] = {'values': []}
    user_data[chat_id]['values'].append(int(value))

    if value_index < 4:
        request_values(chat_id, value_index + 1)
    else:
        simplified_expression = simplify_kmap(user_data[chat_id]['values'])
        bot.send_message(chat_id, f"–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –±—É–ª–µ–≤–∞ —Ñ—É–Ω–∫—Ü–∏—è:\n{simplified_expression}")
        del user_data[chat_id]  # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è




@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    welcome_text = ("–ü—Ä–∏–≤–µ—Ç! –Ø BoolSimplifyBot ü§ñ\n"
                    "–Ø –ø–æ–º–æ–≥—É —É–ø—Ä–æ—Å—Ç–∏—Ç—å —Ç–≤–æ–∏ –±—É–ª–µ–≤—ã –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –∫–∞—Ä—Ç—ã –ö–∞—Ä–Ω–æ.\n"
                    "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É '–ù–∞—á–∞—Ç—å –≤–≤–æ–¥ üßÆ', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤–≤–æ–¥–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏.")
    bot.reply_to(message, welcome_text, reply_markup=generate_markup())


def generate_markup():
    markup = types.InlineKeyboardMarkup()
    begin_button = types.InlineKeyboardButton(text='–ù–∞—á–∞—Ç—å –≤–≤–æ–¥ üßÆ', callback_data='begin_input')
    markup.add(begin_button)
    return markup


@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    if call.data == 'begin_input':
        request_values(call.message.chat.id)